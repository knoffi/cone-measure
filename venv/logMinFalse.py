import polygonTests as pT
import randomPolygon3Centered as rP
import math
import logMin
import matrix as M

K = [[0.16640928450586043, 0.28917418677397777], [0.15101525081218548, 0.3064079753306511], [-0.2290524848905303, 0.683903928674077], [-0.3604141149725954, 0.7581738202489986], [-0.847415312840231, 0.3481652448661193], [-0.328913051451769, -0.6175664684642002], [-0.06965097663602743, -0.5785376713775047], [0.053503470369221845, -0.511176773056158], [0.3277790235573622, -0.2924005917258763], [0.3449859309091141, -0.2713847772475397], [0.3973534601888786, -0.06595397944732861], [0.3943995204485307, -0.04880489457521678]]
L = [[-0.20084726556302288, 0.5038871568097026], [-1.1634528166966214, -0.40039248009544], [1.364300082259644, -0.10349467671426259]]
#1 - prod =  0.41892467096376773
# P (non centered K) = [[0.6382449192404283, 1.6421863649812602], [0.6861978846456941, 1.6369216410302712], [1.5834756164177117, 2.324465507422115], [1.753926046773701, 2.6213448009357405], [2.6374198407024996, 2.4416720850944116], [4.539079562681944, 2.145404233227454], [4.9663691753868955, 2.045820722537232], [5.202494901347077, 1.9840737483293533], [5.790025528402832, 2.121973857368612], [5.832478556954785, 2.1416589259974934], [6.173265688074134, 2.119135219790364], [6.200373785109342, 2.1034826562411713]]
#Q  (non centered L )=[[2.7395254834422404, 1.9239457880688033], [3.3822025830862747, 3.5844757752769514], [5.970781090091909, 1.062412424236289]]
# logMin falsch

K_2 = [[-0.8027570210725581, 2.5202127908091567], [0.0665629067837046, -1.015352168283683], [0.09616084089055046, -1.1036200500765296], [0.4856226513060858, -1.325879797968912], [0.692639899104032, -1.3535666163858073]]
L_2 = [[0.37810092340086054, 0.23094354193166902], [0.3414956829626958, 0.548890407373582], [0.07551558009940539, 0.9903033735384538], [-0.6043142997296782, -0.3663648753866299], [-0.33906879838928006, -0.5431777440437274], [0.2845622482654368, -0.6998987128874904], [0.37443260034965425, -0.6346135230574098]]
diff_2 = 0.204712941404679
P_2 = [[1.8182275560402439, 52.65760087945541], [4.704822962323084, 1.355489429229597], [4.871873778925794, 2.698128496792612], [5.517777275792318, 8.600287852794143], [5.681221994379338, 11.247383410077717]]
Q_2 =[[0.4607346287832009, 0.7654976318990654], [0.9588843867415844, 1.0840272516864125], [1.4708605336673284, 1.654983664163523], [3.7416407647126895, 1.2170518627607763], [4.2073529769054, 1.132861079164383], [5.106718894085842, 1.3658748358262542], [5.24646322610547, 1.3345895007916007]]


K_3 = [[1.052049302481122, -0.18666355264701714], [1.0425932812285068, -0.17519657109786882], [0.7991927391465945, 0.09597911524287145], [-0.5428204859021103, 0.3981659810049964], [-1.423986101430348, 0.06657344087523172], [0.5132126932263295, -0.32422542940711147], [0.9008328628297968, -0.4018117379414487], [1.0235484690903456, -0.42609644941214325], [1.061430832887989, -0.4329051351530531], [1.229646449425271, -0.46014361797622133]]
L_3 = [[-1.4534452321840918, 0.8753624762496419], [-0.47283237988624255, -0.11598749291412506], [0.2956588815794409, -0.4273504951098721], [1.6400758542322789, -0.5462151494367243]]
diff_3 = 0.8668376151785971
P_3 = [[1.1292671772362404, 0.24796295230891802], [1.3565988359453554, 0.2855881943387991], [2.1816764983439967, 1.9250016286535228], [2.7596721733494416, 8.111161612727626], [3.019909398516023, 11.831317697986947], [3.3153952525166437, 2.5106248223441834], [4.058148138360057, 1.0150741396000749], [4.679375936043422, 0.922195728322726], [4.869177649031623, 0.9661289198611708], [5.434783121083798, 1.4457477098648306]]
Q_3 = [[2.702509047952883, 2.4667534689635926], [3.2801824296865525, 1.0607018295651731], [4.479060113712977, 0.5364490523637216], [5.864975993118348, 1.637959705983908]]


K_neu = [[0.18330570253588885, -0.07572653414653394], [1.399911101870417, 1.4640271125043487], [-0.3639263120843101, 0.04111425130282754], [-0.8702312191752027, -0.7885527674384502], [-0.7056247782747376, -1.0212748868132187], [-0.6517933594552605, -1.0519563999837935], [-0.6152022972028497, -1.0578275674858386], [-0.5699526055351664, -1.0281352384934208], [-0.5525126733384214, -1.0061181457622623]]
L_neu = [[0.6710889107150083, 2.061658100546174], [-0.5455183196035935, -0.7661117075123974], [-0.5716792416590069, -0.8303854194206479], [-0.6058586318283575, -1.0188856277493157], [-0.3355433810371716, -1.0818024239444644], [-0.192993872700422, -1.043115221446285], [-0.0003182220005610442, -0.9630153442014133], [0.007114622006504105, -0.9431612899186368]]


K_neu2 = [[0.1854096878558693, 0.4624033525296421], [0.12008587275435134, 0.5081577888669971], [0.11175176844735246, 0.513001619334454], [-0.19627711142390006, 0.6727480215910037], [-0.33132921299793106, 0.6692278643346493], [-0.34281195230169326, 0.6525506824076405], [-0.5159576702324125, -0.3362460658697694], [-0.4842978155352203, -0.5829560734282564], [-0.30454609606921085, -0.6437974765067452], [0.3350649887143156, -0.3219271341869712], [0.5680870325217205, -0.20361882959746194], [0.8242752142411909, -0.0671075964536528]]
L_neu2 = [[0.6994336025749528, 0.8043993158128996], [0.052357979044374385, 0.3403617595601891], [-1.689732330712752, -1.1208705092336295], [1.059343955872281, 0.3147125220106231]]

#sollte tester f√ºr polytop-eigenschaft benutzen

#pT.plotPoly( K_2 , 'g' )
#pT.plotPoly( L_2 , 'g')
#pT.plotPoly( rP.getCartesian(P_2) , 'g')
#pT.plotPoly( rP.getCartesian(Q_2) , 'g')
#print( pT.isConvex( K_3 ))
#print( pT.isConvexRun( K_3 ))
#print( pT.isConvex( L_3 ))
#print( pT.isConvexRun( L_3 ))
#print( rP.getCenter(K_2))
#print( rP.getCenter(L_2))
#print( logMin.logMinTest( P_2 , Q_2 ) )
test_1 = rP.getCartesian(P_2)
test_2 = rP.getCartesian(rP.getPolar( rP.getCartesian( P_2 )))
sum = 0
for i in range( len( test_1 ) ) :
    sum += M.dist( test_1[ i - 1 ] , test_2[ i - 2 ] )

print(sum)
pT.plotPoly( test_1 , 'r' )
pT.plotPoly( test_2 , 'g')

